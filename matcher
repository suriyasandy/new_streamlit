import os
import pandas as pd

class TradeDataMatcher:
    def __init__(self, uat_dir="downloads/UAT", prod_dir="downloads/PROD", output_dir="downloads/MATCHED"):
        self.uat_dir = uat_dir
        self.prod_dir = prod_dir
        self.output_dir = output_dir
        os.makedirs(output_dir, exist_ok=True)

    def match_files(self):
        matched_files = []
        key_columns = ["TradeID", "TradeDate", "Instrument"]  # ✅ update if needed

        for filename in os.listdir(self.uat_dir):
            if not filename.endswith(".csv"):
                continue

            uat_file = os.path.join(self.uat_dir, filename)
            prod_file = os.path.join(self.prod_dir, filename)

            if os.path.exists(prod_file):
                df_uat = pd.read_csv(uat_file)
                df_prod = pd.read_csv(prod_file)

                if all(col in df_uat.columns and col in df_prod.columns for col in key_columns):
                    # Ensure same types
                    df_uat[key_columns] = df_uat[key_columns].astype(str)
                    df_prod[key_columns] = df_prod[key_columns].astype(str)

                    # Filter UAT rows that exist in PROD
                    df_matched = df_uat.merge(
                        df_prod[key_columns].drop_duplicates(),
                        on=key_columns,
                        how='inner'
                    )

                    if not df_matched.empty:
                        output_file = os.path.join(self.output_dir, filename)
                        df_matched.to_csv(output_file, index=False)
                        matched_files.append(output_file)
                        print(f"✅ Matched UAT rows saved: {output_file}")
                    else:
                        print(f"⚠️ No matching UAT rows in {filename}")
                else:
                    print(f"❌ Missing key columns in {filename}")

        return matched_files
